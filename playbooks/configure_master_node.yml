---
- hosts: KubeMasters
  become: yes
  become_user: root
  become_method: sudo
  vars_files:
  - ../env_variables
  tasks:
  - name: Pulling images required for setting up a Kubernetes cluster
    shell: kubeadm config images pull

  - name: Resetting kubeadm
    shell: kubeadm reset -f
    register: output

  - name: Initializing Kubernetes cluster
    shell: kubeadm init --apiserver-advertise-address {{ad_addr}} --pod-network-cidr={{weave_net_subnet}} --service-cidr={{svc_ip_range}}
    register: output
#    shell: kubeadm init --apiserver-advertise-address {{ad_addr}} --pod-network-cidr={{network_cidr}} --service-cidr={{svc_ip_range}}

#  When ansible is executed on the k8s master node
#  - name: Storing Logs and Generated token for future purpose
#    local_action: copy content={{ output.stdout }} dest=/opt/kube-tokens/{{ token_file }}

#  When ansible is executed from the remote Ansible Edge Node
  - name: Storing Logs and Generated token for future purpose.
    copy: content={{ output.stdout }} dest=/opt/kube-tokens/{{ token_file }}

  - name: Copying required files
    shell: |
     mkdir -p $HOME/.kube
     sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
     sudo chown $(id -u):$(id -g) $HOME/.kube/config

#  - name: Install Network Flannel Add-on
#    command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

  - name: Set up weave network for CNI Overlay Network
    shell: export KUBECONFIG=/etc/kubernetes/admin.conf && export kubever="$(kubectl version | base64 | tr -d '\n')&env.IPALLOC_RANGE={{weave_net}}" && kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"
    register: out


#    shell: export KUBECONFIG=/etc/kubernetes/admin.conf && export kubever="$(kubectl version | base64 | tr -d '\n')&env.IPALLOC_RANGE={{svc_ip_v}}" && kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"

#    shell: export KUBECONFIG=/etc/kubernetes/admin.conf && export kubever="$(kubectl version | base64 | tr -d '\n')&env.IPALLOC_DEFAULT_SUBNET={{cidr_v}}&env.IPALLOC_RANGE={{svc_ip_v}}" && kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"
  - debug: var=out.stdout_lines
